services:
  # region databases
  postgres:
    container_name: netku-postgres
    restart: always
    image: postgres

    volumes:
      - postgres-db-dir:/var/lib/postgresql/data

    networks:
      - netku-net

    hostname: postgresql

    ports:
      - 5430:5432

    env_file:
      - .env

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 10
  mongo:
    container_name: netku-mongo
    restart: always
    image: mongo

    volumes:
      - mongo-db-dir:/data/db

    networks:
      - netku-net

    ports:
      - 27010:27017

    env_file:
      - .env
  # endregion

  xray:
    container_name: netku-xray
    restart: always
    build:
      context: services/xray

    volumes:
      - cert-dir:/etc/cert:ro
      - xray-log-dir:/etc/xray/log

    networks:
      - netku-net

    ports:
      - 443:443

    env_file:
      - .env

    healthcheck:
      test: [ "CMD-SHELL", "/app/xray --greet" ]
      interval: 2s
      timeout: 5s
      retries: 10

    depends_on:
      server:
        condition: service_started

  # region Assistant environment
  assistant:
    container_name: netku-assistant
    restart: always
    build:
      context: services/assistant

    volumes:
      - cert-dir:/etc/cert:ro

    networks:
      - netku-net

    env_file:
      - .env

  assistant-worker:
    container_name: netku-assistant-worker
    restart: always
    build:
      context: services/assistant
    command: [ "python", "manage.py", "-w" ]

    volumes:
      - cert-dir:/etc/cert:ro

    networks:
      - netku-net

    env_file:
      - .env

  assistant-scheduler:
    container_name: netku-assistant-scheduler
    restart: always
    build:
      context: services/assistant
    command: [ "python", "manage.py", "-t" ]

    volumes:
      - cert-dir:/etc/cert:ro

    networks:
      - netku-net

    env_file:
      - .env
  # endregion

  server:
    container_name: netku-server
    restart: always
    build:
      context: services/server
      args:
        ASSISTANT_PORT:
        DOMAIN:
        XRAY_FALLBACK_PORT:


    volumes:
      - cert-dir:/etc/cert:ro
      - nginx-html:/usr/share/nginx/html

    networks:
      - netku-net

    ports:
      - 80:80

    env_file:
      - .env

  landing:
    container_name: netku-landing
    restart: always
    build:
      context: services/landing

    networks:
      - netku-net

    volumes:
      - nginx-html:/app/dist

  booking:
    container_name: netku-booking
    restart: always
    build:
      context: services/booking

    volumes:
      - booking-browser-dir:/root/.cache/rod/browser

    networks:
      - netku-net

    env_file:
      - .env

    healthcheck:
      test: [ "CMD-SHELL", "/app/booking --greet" ]
      interval: 2s
      timeout: 5s
      retries: 10

  rabbitmq:
    container_name: netku-rabbitmq
    restart: always
    image: rabbitmq:management

    ports:
      - 5670:5672
      - 15670:15672

    env_file:
      - .env

    networks:
      - netku-net

volumes:
  cert-dir:
    external: true
  xray-log-dir:
    external: true
  postgres-db-dir:
    external: true
  mongo-db-dir:
    external: true
  nginx-html:
  booking-browser-dir:


networks:
  netku-net:
    name: netku-net
