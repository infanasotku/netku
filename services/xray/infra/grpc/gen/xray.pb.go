// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: proto/xray.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type XrayInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XrayInfo) Reset() {
	*x = XrayInfo{}
	mi := &file_proto_xray_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XrayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XrayInfo) ProtoMessage() {}

func (x *XrayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_xray_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XrayInfo.ProtoReflect.Descriptor instead.
func (*XrayInfo) Descriptor() ([]byte, []int) {
	return file_proto_xray_proto_rawDescGZIP(), []int{0}
}

func (x *XrayInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type XrayFullInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Running       bool                   `protobuf:"varint,2,opt,name=running,proto3" json:"running,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XrayFullInfo) Reset() {
	*x = XrayFullInfo{}
	mi := &file_proto_xray_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XrayFullInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XrayFullInfo) ProtoMessage() {}

func (x *XrayFullInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_xray_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XrayFullInfo.ProtoReflect.Descriptor instead.
func (*XrayFullInfo) Descriptor() ([]byte, []int) {
	return file_proto_xray_proto_rawDescGZIP(), []int{1}
}

func (x *XrayFullInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *XrayFullInfo) GetRunning() bool {
	if x != nil {
		return x.Running
	}
	return false
}

type Null struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Null) Reset() {
	*x = Null{}
	mi := &file_proto_xray_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Null) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Null) ProtoMessage() {}

func (x *Null) ProtoReflect() protoreflect.Message {
	mi := &file_proto_xray_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Null.ProtoReflect.Descriptor instead.
func (*Null) Descriptor() ([]byte, []int) {
	return file_proto_xray_proto_rawDescGZIP(), []int{2}
}

var File_proto_xray_proto protoreflect.FileDescriptor

var file_proto_xray_proto_rawDesc = string([]byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78, 0x72, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x1e, 0x0a, 0x08, 0x58, 0x72, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0x3c, 0x0a, 0x0c, 0x58, 0x72, 0x61, 0x79, 0x46, 0x75, 0x6c, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x22, 0x06, 0x0a, 0x04, 0x4e, 0x75, 0x6c, 0x6c, 0x32, 0x58, 0x0a, 0x04, 0x58, 0x72, 0x61, 0x79,
	0x12, 0x25, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x58, 0x72, 0x61, 0x79, 0x12,
	0x09, 0x2e, 0x58, 0x72, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x09, 0x2e, 0x58, 0x72, 0x61,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x58, 0x72, 0x61, 0x79, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x05, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x1a, 0x0d, 0x2e, 0x58, 0x72, 0x61, 0x79, 0x46, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_xray_proto_rawDescOnce sync.Once
	file_proto_xray_proto_rawDescData []byte
)

func file_proto_xray_proto_rawDescGZIP() []byte {
	file_proto_xray_proto_rawDescOnce.Do(func() {
		file_proto_xray_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_xray_proto_rawDesc), len(file_proto_xray_proto_rawDesc)))
	})
	return file_proto_xray_proto_rawDescData
}

var file_proto_xray_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_xray_proto_goTypes = []any{
	(*XrayInfo)(nil),     // 0: XrayInfo
	(*XrayFullInfo)(nil), // 1: XrayFullInfo
	(*Null)(nil),         // 2: Null
}
var file_proto_xray_proto_depIdxs = []int32{
	0, // 0: Xray.RestartXray:input_type -> XrayInfo
	2, // 1: Xray.CheckXrayHealth:input_type -> Null
	0, // 2: Xray.RestartXray:output_type -> XrayInfo
	1, // 3: Xray.CheckXrayHealth:output_type -> XrayFullInfo
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_xray_proto_init() }
func file_proto_xray_proto_init() {
	if File_proto_xray_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_xray_proto_rawDesc), len(file_proto_xray_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_xray_proto_goTypes,
		DependencyIndexes: file_proto_xray_proto_depIdxs,
		MessageInfos:      file_proto_xray_proto_msgTypes,
	}.Build()
	File_proto_xray_proto = out.File
	file_proto_xray_proto_goTypes = nil
	file_proto_xray_proto_depIdxs = nil
}
