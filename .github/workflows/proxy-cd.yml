# Deploys only on closed pull request to master
# with labels **enhancement** or **bug**.

name: proxy-cd
on:
  push:
    # branches:
    #   - master

jobs:
  run-common:
    uses: ./.github/workflows/common.yml

  build-and-push:
    name: Build and push proxy image

    # if: |
    #   contains(fromJson(needs.run-common.outputs.pr_data).labels.*.name, 'proxy') &&
    #   (
    #     contains(fromJson(needs.run-common.outputs.pr_data).labels.*.name, 'enhancement') ||
    #     contains(fromJson(needs.run-common.outputs.pr_data).labels.*.name, 'bug')
    #   )

    runs-on: ubuntu-latest
    needs: run-common
    environment: proxy-staging-deploy

    steps:
      - uses: actions/checkout@v4

      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/proxy.Dockerfile
          push: true
          tags: |
            ${{secrets.REGISTRY_URL}}/netku/proxy:${{ github.sha }}

  deploy:
    name: Pull registry and restart proxy

    needs: build-and-push
    runs-on: ubuntu-latest
    environment: proxy-staging-deploy

    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
      - name: Deploy via SSH
        run: |
          ssh -p ${{ secrets.SSH_PORT }} root@${{ secrets.SERVER_IP }} << 'EOF'
            cd ${{ secrets.PROJECT_DIR }}
            if grep -q '^PROXY _TAG=' .env; then
              sed -i "s|^PROXY_TAG=.*|PROXY_TAG=${{ github.sha }}|" .env
            else
              echo "PROXY_TAG=${{ github.sha }}" >> .env
            fi
            docker compose pull proxy
            docker compose stop proxy
            docker compose rm -f proxy
            docker compose up -d proxy
          EOF
