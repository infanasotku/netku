name: python-services-ci
on:
  pull_request:
    branches:
      - master
    types: [synchronize, opened]

jobs:
  build:
    name: Build python service
    runs-on: ubuntu-latest

    strategy:
      matrix:
        services: [
            "common/python",
            "services/user",
            "services/proxy",
            "services/auth",
          ] # Services

    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dev dependencies
        working-directory: ${{ matrix.services }}
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements-dev.txt
      - name: Run Ruff
        working-directory: ${{ matrix.services }}
        run: |
          ruff check .
          ruff format --check .

  test:
    name: Test python service
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        services: ["services/user", "services/auth"]

    env:
      ADMIN_PASSWORD: test
      ADMIN_USERNAME: test
      POSTGRES_PASSWORD: test
      POSTGRES_SCHEMA: test
      POSTGRES_USER: test
      PUBLIC_KEY_PATH: ./stub.pub
      RABBITMQ_PASS: test
      RABBITMQ_USER: test
      SCOPE_ROUTING_KEY: test
      SCOPE_EXCHANGE_NAME: test

    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dev dependencies
        working-directory: ${{ matrix.services }}
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements-dev.txt
      - name: Make stub public key
        working-directory: ${{ matrix.services }}
        run: |
          openssl genpkey -algorithm RSA -out private_key.pem
          openssl rsa -in private_key.pem -pubout -out stub.pub
      - name: Run pytest tests
        working-directory: ${{ matrix.services }}
        run: python -m pytest
